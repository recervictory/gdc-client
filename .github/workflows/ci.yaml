name: ci
on:
  push:
    branches:
      - develop
      - release/**
      - hotfix/**
      - tmp/mac-hac
    tags:
      - "*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          #- ubuntu-latest
          #- ubuntu-16.04
          #- windows-latest
        python:
          - 3.7
    env:
      GDC_CLIENT_ZIP: "gdc-client.zip"
    steps:
    - uses: actions/checkout@v2

    # Force setup-python to rebuild Python on macOS.
    - name: Clear cached Python
      if: matrix.os == 'macos-latest'
      run: |
        ls -l "${RUNNER_TOOL_CACHE}"
        ls -l "${RUNNER_TOOL_CACHE}/Python"
        echo before
        rm -rf "${RUNNER_TOOL_CACHE}/Python" && echo can delete || echo cannot delete
        echo after
        ls -l "${RUNNER_TOOL_CACHE}"
        ls -l "${RUNNER_TOOL_CACHE}/Python"
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      env:
        MACOSX_DEPLOYMENT_TARGET: '10.9'
        RUNNER_TOOL_CACHE: ${{ github.workspace }}/non-ex-is-tent
      with:
        python-version: ${{ matrix.python }}
    - name: Run Tests
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install tox
        tox -e py
    - name: Package
      run: |
        cd bin
        pip install virtualenv
        . ./package
        echo ::set-env name=GDC_CLIENT_ZIP::$GDC_CLIENT_ZIP
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.GDC_CLIENT_ZIP }}-py${{ matrix.python }}-${{ matrix.os }}-TEST
        path: bin/gdc-client_*.zip
